//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_ACCOUNT", "ACCOUNT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaushaltsRechner.Data.Model.ACCOUNT), "MOVEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.MOVEMENT), true)]
[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaushaltsRechner.Data.Model.CATEGORY), "MOVEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.MOVEMENT), true)]
[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_REASON", "REASON", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaushaltsRechner.Data.Model.REASON), "MOVEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.MOVEMENT), true)]
[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_USER", "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HaushaltsRechner.Data.Model.USER), "MOVEMENT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.MOVEMENT), true)]
[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "ACCOUNTUSER", "ACCOUNT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.ACCOUNT), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.USER))]
[assembly: EdmRelationshipAttribute("HaushaltsrechnerModel", "RIGHTUSER", "RIGHT", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.RIGHT), "USER", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HaushaltsRechner.Data.Model.USER))]

#endregion

namespace HaushaltsRechner.Data.Model
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class HaushaltsrechnerEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues HaushaltsrechnerEntities-Objekt mithilfe der in Abschnitt 'HaushaltsrechnerEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public HaushaltsrechnerEntities() : base("name=HaushaltsrechnerEntities", "HaushaltsrechnerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues HaushaltsrechnerEntities-Objekt.
        /// </summary>
        public HaushaltsrechnerEntities(string connectionString) : base(connectionString, "HaushaltsrechnerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues HaushaltsrechnerEntities-Objekt.
        /// </summary>
        public HaushaltsrechnerEntities(EntityConnection connection) : base(connection, "HaushaltsrechnerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<ACCOUNT> ACCOUNT
        {
            get
            {
                if ((_ACCOUNT == null))
                {
                    _ACCOUNT = base.CreateObjectSet<ACCOUNT>("ACCOUNT");
                }
                return _ACCOUNT;
            }
        }
        private ObjectSet<ACCOUNT> _ACCOUNT;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<MOVEMENT> MOVEMENT
        {
            get
            {
                if ((_MOVEMENT == null))
                {
                    _MOVEMENT = base.CreateObjectSet<MOVEMENT>("MOVEMENT");
                }
                return _MOVEMENT;
            }
        }
        private ObjectSet<MOVEMENT> _MOVEMENT;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<REASON> REASON
        {
            get
            {
                if ((_REASON == null))
                {
                    _REASON = base.CreateObjectSet<REASON>("REASON");
                }
                return _REASON;
            }
        }
        private ObjectSet<REASON> _REASON;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<RIGHT> RIGHT
        {
            get
            {
                if ((_RIGHT == null))
                {
                    _RIGHT = base.CreateObjectSet<RIGHT>("RIGHT");
                }
                return _RIGHT;
            }
        }
        private ObjectSet<RIGHT> _RIGHT;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<USER> USER
        {
            get
            {
                if ((_USER == null))
                {
                    _USER = base.CreateObjectSet<USER>("USER");
                }
                return _USER;
            }
        }
        private ObjectSet<USER> _USER;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<V_OVERVIEW> V_OVERVIEW
        {
            get
            {
                if ((_V_OVERVIEW == null))
                {
                    _V_OVERVIEW = base.CreateObjectSet<V_OVERVIEW>("V_OVERVIEW");
                }
                return _V_OVERVIEW;
            }
        }
        private ObjectSet<V_OVERVIEW> _V_OVERVIEW;

        #endregion

        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'ACCOUNT'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToACCOUNT(ACCOUNT aCCOUNT)
        {
            base.AddObject("ACCOUNT", aCCOUNT);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CATEGORY'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'MOVEMENT'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToMOVEMENT(MOVEMENT mOVEMENT)
        {
            base.AddObject("MOVEMENT", mOVEMENT);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'REASON'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToREASON(REASON rEASON)
        {
            base.AddObject("REASON", rEASON);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'RIGHT'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToRIGHT(RIGHT rIGHT)
        {
            base.AddObject("RIGHT", rIGHT);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'USER'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToUSER(USER uSER)
        {
            base.AddObject("USER", uSER);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'V_OVERVIEW'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToV_OVERVIEW(V_OVERVIEW v_OVERVIEW)
        {
            base.AddObject("V_OVERVIEW", v_OVERVIEW);
        }

        #endregion

    }

    #endregion

    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="ACCOUNT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ACCOUNT : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues ACCOUNT-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="nAME">Anfangswert der Eigenschaft NAME.</param>
        public static ACCOUNT CreateACCOUNT(global::System.Guid id, global::System.String nAME)
        {
            ACCOUNT aCCOUNT = new ACCOUNT();
            aCCOUNT.ID = id;
            aCCOUNT.NAME = nAME;
            return aCCOUNT;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false, "NAME");
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_ACCOUNT", "MOVEMENT")]
        public EntityCollection<MOVEMENT> MOVEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "MOVEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "MOVEMENT", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "ACCOUNTUSER", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("HaushaltsrechnerModel.ACCOUNTUSER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("HaushaltsrechnerModel.ACCOUNTUSER", "USER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CATEGORY-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="nAME">Anfangswert der Eigenschaft NAME.</param>
        public static CATEGORY CreateCATEGORY(global::System.Guid id, global::System.String nAME)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.ID = id;
            cATEGORY.NAME = nAME;
            return cATEGORY;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false, "NAME");
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_CATEGORY", "MOVEMENT")]
        public EntityCollection<MOVEMENT> MOVEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "MOVEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "MOVEMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="MOVEMENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOVEMENT : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues MOVEMENT-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="aMOUNT">Anfangswert der Eigenschaft AMOUNT.</param>
        /// <param name="dATE_ADDED">Anfangswert der Eigenschaft DATE_ADDED.</param>
        /// <param name="aCCOUNT_ID">Anfangswert der Eigenschaft ACCOUNT_ID.</param>
        /// <param name="cATEGORY_ID">Anfangswert der Eigenschaft CATEGORY_ID.</param>
        /// <param name="uSER_ID">Anfangswert der Eigenschaft USER_ID.</param>
        /// <param name="rEASON_ID">Anfangswert der Eigenschaft REASON_ID.</param>
        public static MOVEMENT CreateMOVEMENT(global::System.Guid id, global::System.Decimal aMOUNT, global::System.DateTime dATE_ADDED, global::System.Guid aCCOUNT_ID, global::System.Guid cATEGORY_ID, global::System.Guid uSER_ID, global::System.Guid rEASON_ID)
        {
            MOVEMENT mOVEMENT = new MOVEMENT();
            mOVEMENT.ID = id;
            mOVEMENT.AMOUNT = aMOUNT;
            mOVEMENT.DATE_ADDED = dATE_ADDED;
            mOVEMENT.ACCOUNT_ID = aCCOUNT_ID;
            mOVEMENT.CATEGORY_ID = cATEGORY_ID;
            mOVEMENT.USER_ID = uSER_ID;
            mOVEMENT.REASON_ID = rEASON_ID;
            return mOVEMENT;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                OnAMOUNTChanging(value);
                ReportPropertyChanging("AMOUNT");
                _AMOUNT = StructuralObject.SetValidValue(value, "AMOUNT");
                ReportPropertyChanged("AMOUNT");
                OnAMOUNTChanged();
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGE
        {
            get
            {
                return _MESSAGE;
            }
            set
            {
                OnMESSAGEChanging(value);
                ReportPropertyChanging("MESSAGE");
                _MESSAGE = StructuralObject.SetValidValue(value, true, "MESSAGE");
                ReportPropertyChanged("MESSAGE");
                OnMESSAGEChanged();
            }
        }
        private global::System.String _MESSAGE;
        partial void OnMESSAGEChanging(global::System.String value);
        partial void OnMESSAGEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATE_ADDED
        {
            get
            {
                return _DATE_ADDED;
            }
            set
            {
                OnDATE_ADDEDChanging(value);
                ReportPropertyChanging("DATE_ADDED");
                _DATE_ADDED = StructuralObject.SetValidValue(value, "DATE_ADDED");
                ReportPropertyChanged("DATE_ADDED");
                OnDATE_ADDEDChanged();
            }
        }
        private global::System.DateTime _DATE_ADDED;
        partial void OnDATE_ADDEDChanging(global::System.DateTime value);
        partial void OnDATE_ADDEDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE_EDIT
        {
            get
            {
                return _DATE_EDIT;
            }
            set
            {
                OnDATE_EDITChanging(value);
                ReportPropertyChanging("DATE_EDIT");
                _DATE_EDIT = StructuralObject.SetValidValue(value, "DATE_EDIT");
                ReportPropertyChanged("DATE_EDIT");
                OnDATE_EDITChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE_EDIT;
        partial void OnDATE_EDITChanging(Nullable<global::System.DateTime> value);
        partial void OnDATE_EDITChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ACCOUNT_ID
        {
            get
            {
                return _ACCOUNT_ID;
            }
            set
            {
                OnACCOUNT_IDChanging(value);
                ReportPropertyChanging("ACCOUNT_ID");
                _ACCOUNT_ID = StructuralObject.SetValidValue(value, "ACCOUNT_ID");
                ReportPropertyChanged("ACCOUNT_ID");
                OnACCOUNT_IDChanged();
            }
        }
        private global::System.Guid _ACCOUNT_ID;
        partial void OnACCOUNT_IDChanging(global::System.Guid value);
        partial void OnACCOUNT_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CATEGORY_ID
        {
            get
            {
                return _CATEGORY_ID;
            }
            set
            {
                OnCATEGORY_IDChanging(value);
                ReportPropertyChanging("CATEGORY_ID");
                _CATEGORY_ID = StructuralObject.SetValidValue(value, "CATEGORY_ID");
                ReportPropertyChanged("CATEGORY_ID");
                OnCATEGORY_IDChanged();
            }
        }
        private global::System.Guid _CATEGORY_ID;
        partial void OnCATEGORY_IDChanging(global::System.Guid value);
        partial void OnCATEGORY_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                OnUSER_IDChanging(value);
                ReportPropertyChanging("USER_ID");
                _USER_ID = StructuralObject.SetValidValue(value, "USER_ID");
                ReportPropertyChanged("USER_ID");
                OnUSER_IDChanged();
            }
        }
        private global::System.Guid _USER_ID;
        partial void OnUSER_IDChanging(global::System.Guid value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid REASON_ID
        {
            get
            {
                return _REASON_ID;
            }
            set
            {
                OnREASON_IDChanging(value);
                ReportPropertyChanging("REASON_ID");
                _REASON_ID = StructuralObject.SetValidValue(value, "REASON_ID");
                ReportPropertyChanged("REASON_ID");
                OnREASON_IDChanged();
            }
        }
        private global::System.Guid _REASON_ID;
        partial void OnREASON_IDChanging(global::System.Guid value);
        partial void OnREASON_IDChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_ACCOUNT", "ACCOUNT")]
        public ACCOUNT ACCOUNT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ACCOUNT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "ACCOUNT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ACCOUNT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "ACCOUNT").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ACCOUNT> ACCOUNTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ACCOUNT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "ACCOUNT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ACCOUNT>("HaushaltsrechnerModel.FK_MOVEMENT_ACCOUNT", "ACCOUNT", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("HaushaltsrechnerModel.FK_MOVEMENT_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_REASON", "REASON")]
        public REASON REASON
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REASON>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "REASON").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REASON>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "REASON").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<REASON> REASONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<REASON>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "REASON");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<REASON>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "REASON", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_USER", "USER")]
        public USER USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "USER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "USER").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER> USERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "USER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="REASON")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class REASON : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues REASON-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="tEXT">Anfangswert der Eigenschaft TEXT.</param>
        public static REASON CreateREASON(global::System.Guid id, global::System.String tEXT)
        {
            REASON rEASON = new REASON();
            rEASON.ID = id;
            rEASON.TEXT = tEXT;
            return rEASON;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TEXT
        {
            get
            {
                return _TEXT;
            }
            set
            {
                OnTEXTChanging(value);
                ReportPropertyChanging("TEXT");
                _TEXT = StructuralObject.SetValidValue(value, false, "TEXT");
                ReportPropertyChanged("TEXT");
                OnTEXTChanged();
            }
        }
        private global::System.String _TEXT;
        partial void OnTEXTChanging(global::System.String value);
        partial void OnTEXTChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_REASON", "MOVEMENT")]
        public EntityCollection<MOVEMENT> MOVEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "MOVEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_REASON", "MOVEMENT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="RIGHT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RIGHT : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues RIGHT-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="nAME">Anfangswert der Eigenschaft NAME.</param>
        public static RIGHT CreateRIGHT(global::System.Guid id, global::System.String nAME)
        {
            RIGHT rIGHT = new RIGHT();
            rIGHT.ID = id;
            rIGHT.NAME = nAME;
            return rIGHT;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false, "NAME");
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "RIGHTUSER", "USER")]
        public EntityCollection<USER> USER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<USER>("HaushaltsrechnerModel.RIGHTUSER", "USER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<USER>("HaushaltsrechnerModel.RIGHTUSER", "USER", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues USER-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="nAME">Anfangswert der Eigenschaft NAME.</param>
        public static USER CreateUSER(global::System.Guid id, global::System.String nAME)
        {
            USER uSER = new USER();
            uSER.ID = id;
            uSER.NAME = nAME;
            return uSER;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false, "NAME");
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWORT
        {
            get
            {
                return _PASSWORT;
            }
            set
            {
                OnPASSWORTChanging(value);
                ReportPropertyChanging("PASSWORT");
                _PASSWORT = StructuralObject.SetValidValue(value, true, "PASSWORT");
                ReportPropertyChanged("PASSWORT");
                OnPASSWORTChanged();
            }
        }
        private global::System.String _PASSWORT;
        partial void OnPASSWORTChanging(global::System.String value);
        partial void OnPASSWORTChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ISADMIN
        {
            get
            {
                return _ISADMIN;
            }
            set
            {
                OnISADMINChanging(value);
                ReportPropertyChanging("ISADMIN");
                _ISADMIN = StructuralObject.SetValidValue(value, "ISADMIN");
                ReportPropertyChanged("ISADMIN");
                OnISADMINChanged();
            }
        }
        private Nullable<global::System.Boolean> _ISADMIN;
        partial void OnISADMINChanging(Nullable<global::System.Boolean> value);
        partial void OnISADMINChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CULTURE
        {
            get
            {
                return _CULTURE;
            }
            set
            {
                OnCULTUREChanging(value);
                ReportPropertyChanging("CULTURE");
                _CULTURE = StructuralObject.SetValidValue(value, true, "CULTURE");
                ReportPropertyChanged("CULTURE");
                OnCULTUREChanged();
            }
        }
        private global::System.String _CULTURE;
        partial void OnCULTUREChanging(global::System.String value);
        partial void OnCULTUREChanged();

        #endregion

        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "FK_MOVEMENT_USER", "MOVEMENT")]
        public EntityCollection<MOVEMENT> MOVEMENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "MOVEMENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOVEMENT>("HaushaltsrechnerModel.FK_MOVEMENT_USER", "MOVEMENT", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "ACCOUNTUSER", "ACCOUNT")]
        public EntityCollection<ACCOUNT> ACCOUNT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ACCOUNT>("HaushaltsrechnerModel.ACCOUNTUSER", "ACCOUNT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ACCOUNT>("HaushaltsrechnerModel.ACCOUNTUSER", "ACCOUNT", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HaushaltsrechnerModel", "RIGHTUSER", "RIGHT")]
        public EntityCollection<RIGHT> RIGHT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RIGHT>("HaushaltsrechnerModel.RIGHTUSER", "RIGHT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RIGHT>("HaushaltsrechnerModel.RIGHTUSER", "RIGHT", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HaushaltsrechnerModel", Name="V_OVERVIEW")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_OVERVIEW : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues V_OVERVIEW-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="aMOUNT">Anfangswert der Eigenschaft AMOUNT.</param>
        /// <param name="dATE_ADDED">Anfangswert der Eigenschaft DATE_ADDED.</param>
        /// <param name="aCCOUNT_ID">Anfangswert der Eigenschaft ACCOUNT_ID.</param>
        /// <param name="cATEGORY_ID">Anfangswert der Eigenschaft CATEGORY_ID.</param>
        /// <param name="uSER_ID">Anfangswert der Eigenschaft USER_ID.</param>
        /// <param name="uSER_NAME">Anfangswert der Eigenschaft USER_NAME.</param>
        /// <param name="cATEGORY_NAME">Anfangswert der Eigenschaft CATEGORY_NAME.</param>
        /// <param name="aCCOUNT_NAME">Anfangswert der Eigenschaft ACCOUNT_NAME.</param>
        /// <param name="rEASON_ID">Anfangswert der Eigenschaft REASON_ID.</param>
        /// <param name="rEASON_TEXT">Anfangswert der Eigenschaft REASON_TEXT.</param>
        public static V_OVERVIEW CreateV_OVERVIEW(global::System.Guid id, global::System.Decimal aMOUNT, global::System.DateTime dATE_ADDED, global::System.Guid aCCOUNT_ID, global::System.Guid cATEGORY_ID, global::System.Guid uSER_ID, global::System.String uSER_NAME, global::System.String cATEGORY_NAME, global::System.String aCCOUNT_NAME, global::System.Guid rEASON_ID, global::System.String rEASON_TEXT)
        {
            V_OVERVIEW v_OVERVIEW = new V_OVERVIEW();
            v_OVERVIEW.ID = id;
            v_OVERVIEW.AMOUNT = aMOUNT;
            v_OVERVIEW.DATE_ADDED = dATE_ADDED;
            v_OVERVIEW.ACCOUNT_ID = aCCOUNT_ID;
            v_OVERVIEW.CATEGORY_ID = cATEGORY_ID;
            v_OVERVIEW.USER_ID = uSER_ID;
            v_OVERVIEW.USER_NAME = uSER_NAME;
            v_OVERVIEW.CATEGORY_NAME = cATEGORY_NAME;
            v_OVERVIEW.ACCOUNT_NAME = aCCOUNT_NAME;
            v_OVERVIEW.REASON_ID = rEASON_ID;
            v_OVERVIEW.REASON_TEXT = rEASON_TEXT;
            return v_OVERVIEW;
        }

        #endregion

        #region Einfache Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AMOUNT
        {
            get
            {
                return _AMOUNT;
            }
            set
            {
                if (_AMOUNT != value)
                {
                    OnAMOUNTChanging(value);
                    ReportPropertyChanging("AMOUNT");
                    _AMOUNT = StructuralObject.SetValidValue(value, "AMOUNT");
                    ReportPropertyChanged("AMOUNT");
                    OnAMOUNTChanged();
                }
            }
        }
        private global::System.Decimal _AMOUNT;
        partial void OnAMOUNTChanging(global::System.Decimal value);
        partial void OnAMOUNTChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MESSAGE
        {
            get
            {
                return _MESSAGE;
            }
            set
            {
                OnMESSAGEChanging(value);
                ReportPropertyChanging("MESSAGE");
                _MESSAGE = StructuralObject.SetValidValue(value, true, "MESSAGE");
                ReportPropertyChanged("MESSAGE");
                OnMESSAGEChanged();
            }
        }
        private global::System.String _MESSAGE;
        partial void OnMESSAGEChanging(global::System.String value);
        partial void OnMESSAGEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATE_ADDED
        {
            get
            {
                return _DATE_ADDED;
            }
            set
            {
                if (_DATE_ADDED != value)
                {
                    OnDATE_ADDEDChanging(value);
                    ReportPropertyChanging("DATE_ADDED");
                    _DATE_ADDED = StructuralObject.SetValidValue(value, "DATE_ADDED");
                    ReportPropertyChanged("DATE_ADDED");
                    OnDATE_ADDEDChanged();
                }
            }
        }
        private global::System.DateTime _DATE_ADDED;
        partial void OnDATE_ADDEDChanging(global::System.DateTime value);
        partial void OnDATE_ADDEDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATE_EDIT
        {
            get
            {
                return _DATE_EDIT;
            }
            set
            {
                OnDATE_EDITChanging(value);
                ReportPropertyChanging("DATE_EDIT");
                _DATE_EDIT = StructuralObject.SetValidValue(value, "DATE_EDIT");
                ReportPropertyChanged("DATE_EDIT");
                OnDATE_EDITChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATE_EDIT;
        partial void OnDATE_EDITChanging(Nullable<global::System.DateTime> value);
        partial void OnDATE_EDITChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ACCOUNT_ID
        {
            get
            {
                return _ACCOUNT_ID;
            }
            set
            {
                if (_ACCOUNT_ID != value)
                {
                    OnACCOUNT_IDChanging(value);
                    ReportPropertyChanging("ACCOUNT_ID");
                    _ACCOUNT_ID = StructuralObject.SetValidValue(value, "ACCOUNT_ID");
                    ReportPropertyChanged("ACCOUNT_ID");
                    OnACCOUNT_IDChanged();
                }
            }
        }
        private global::System.Guid _ACCOUNT_ID;
        partial void OnACCOUNT_IDChanging(global::System.Guid value);
        partial void OnACCOUNT_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CATEGORY_ID
        {
            get
            {
                return _CATEGORY_ID;
            }
            set
            {
                if (_CATEGORY_ID != value)
                {
                    OnCATEGORY_IDChanging(value);
                    ReportPropertyChanging("CATEGORY_ID");
                    _CATEGORY_ID = StructuralObject.SetValidValue(value, "CATEGORY_ID");
                    ReportPropertyChanged("CATEGORY_ID");
                    OnCATEGORY_IDChanged();
                }
            }
        }
        private global::System.Guid _CATEGORY_ID;
        partial void OnCATEGORY_IDChanging(global::System.Guid value);
        partial void OnCATEGORY_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid USER_ID
        {
            get
            {
                return _USER_ID;
            }
            set
            {
                if (_USER_ID != value)
                {
                    OnUSER_IDChanging(value);
                    ReportPropertyChanging("USER_ID");
                    _USER_ID = StructuralObject.SetValidValue(value, "USER_ID");
                    ReportPropertyChanged("USER_ID");
                    OnUSER_IDChanged();
                }
            }
        }
        private global::System.Guid _USER_ID;
        partial void OnUSER_IDChanging(global::System.Guid value);
        partial void OnUSER_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String USER_NAME
        {
            get
            {
                return _USER_NAME;
            }
            set
            {
                if (_USER_NAME != value)
                {
                    OnUSER_NAMEChanging(value);
                    ReportPropertyChanging("USER_NAME");
                    _USER_NAME = StructuralObject.SetValidValue(value, false, "USER_NAME");
                    ReportPropertyChanged("USER_NAME");
                    OnUSER_NAMEChanged();
                }
            }
        }
        private global::System.String _USER_NAME;
        partial void OnUSER_NAMEChanging(global::System.String value);
        partial void OnUSER_NAMEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_NAME
        {
            get
            {
                return _CATEGORY_NAME;
            }
            set
            {
                if (_CATEGORY_NAME != value)
                {
                    OnCATEGORY_NAMEChanging(value);
                    ReportPropertyChanging("CATEGORY_NAME");
                    _CATEGORY_NAME = StructuralObject.SetValidValue(value, false, "CATEGORY_NAME");
                    ReportPropertyChanged("CATEGORY_NAME");
                    OnCATEGORY_NAMEChanged();
                }
            }
        }
        private global::System.String _CATEGORY_NAME;
        partial void OnCATEGORY_NAMEChanging(global::System.String value);
        partial void OnCATEGORY_NAMEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ACCOUNT_NAME
        {
            get
            {
                return _ACCOUNT_NAME;
            }
            set
            {
                if (_ACCOUNT_NAME != value)
                {
                    OnACCOUNT_NAMEChanging(value);
                    ReportPropertyChanging("ACCOUNT_NAME");
                    _ACCOUNT_NAME = StructuralObject.SetValidValue(value, false, "ACCOUNT_NAME");
                    ReportPropertyChanged("ACCOUNT_NAME");
                    OnACCOUNT_NAMEChanged();
                }
            }
        }
        private global::System.String _ACCOUNT_NAME;
        partial void OnACCOUNT_NAMEChanging(global::System.String value);
        partial void OnACCOUNT_NAMEChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid REASON_ID
        {
            get
            {
                return _REASON_ID;
            }
            set
            {
                if (_REASON_ID != value)
                {
                    OnREASON_IDChanging(value);
                    ReportPropertyChanging("REASON_ID");
                    _REASON_ID = StructuralObject.SetValidValue(value, "REASON_ID");
                    ReportPropertyChanged("REASON_ID");
                    OnREASON_IDChanged();
                }
            }
        }
        private global::System.Guid _REASON_ID;
        partial void OnREASON_IDChanging(global::System.Guid value);
        partial void OnREASON_IDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String REASON_TEXT
        {
            get
            {
                return _REASON_TEXT;
            }
            set
            {
                if (_REASON_TEXT != value)
                {
                    OnREASON_TEXTChanging(value);
                    ReportPropertyChanging("REASON_TEXT");
                    _REASON_TEXT = StructuralObject.SetValidValue(value, false, "REASON_TEXT");
                    ReportPropertyChanged("REASON_TEXT");
                    OnREASON_TEXTChanged();
                }
            }
        }
        private global::System.String _REASON_TEXT;
        partial void OnREASON_TEXTChanging(global::System.String value);
        partial void OnREASON_TEXTChanged();

        #endregion

    }

    #endregion

}
