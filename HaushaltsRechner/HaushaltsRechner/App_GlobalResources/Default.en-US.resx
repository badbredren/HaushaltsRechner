<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account" xml:space="preserve">
    <value>Account</value>
    <comment>Text for Account</comment>
  </data>
  <data name="accountEdit" xml:space="preserve">
    <value>Edit account</value>
    <comment>Text for editing account</comment>
  </data>
  <data name="accountNew" xml:space="preserve">
    <value>Add account</value>
    <comment>Text for new account</comment>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
    <comment>Text for amount</comment>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel-Text</comment>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
    <comment>Text for category</comment>
  </data>
  <data name="CategoryChart" xml:space="preserve">
    <value>Category - overview</value>
    <comment>Text for Category chart</comment>
  </data>
  <data name="CategoryEdit" xml:space="preserve">
    <value>Edit category</value>
    <comment>Edit category</comment>
  </data>
  <data name="CategoryNew" xml:space="preserve">
    <value>Add category</value>
    <comment>New category</comment>
  </data>
  <data name="CategorySummary" xml:space="preserve">
    <value>Category - summary</value>
    <comment>Text for Category summary</comment>
  </data>
  <data name="currency" xml:space="preserve">
    <value>$</value>
    <comment>Currency text</comment>
  </data>
  <data name="dateEdited" xml:space="preserve">
    <value>last change</value>
    <comment>Date of last Change</comment>
  </data>
  <data name="dateFormat" xml:space="preserve">
    <value>mm/dd/yy</value>
    <comment>DateFormat for DateTimePicker</comment>
  </data>
  <data name="decimalSeparator" xml:space="preserve">
    <value>.</value>
    <comment>Separator for decimals</comment>
  </data>
  <data name="deleteAccountConfirm" xml:space="preserve">
    <value>Do you really want to delete the selected Account?</value>
  </data>
  <data name="deleteMovementConfirm" xml:space="preserve">
    <value>Do you really want to delete the selected accounts movement?</value>
  </data>
  <data name="deleteText" xml:space="preserve">
    <value>Delete</value>
    <comment>Text for deleting</comment>
  </data>
  <data name="editRightsForUser" xml:space="preserve">
    <value>Edit rights for "{0}"</value>
    <comment>Edit rights for user by name</comment>
  </data>
  <data name="editUsersForAccount" xml:space="preserve">
    <value>Edit users for account "{0}"</value>
    <comment>Text for edit Users for an account</comment>
  </data>
  <data name="from" xml:space="preserve">
    <value>from</value>
    <comment>from</comment>
  </data>
  <data name="Incomming" xml:space="preserve">
    <value>Incomming</value>
    <comment>Text for Incommings</comment>
  </data>
  <data name="movement" xml:space="preserve">
    <value>Movement</value>
    <comment>Text for account movements</comment>
  </data>
  <data name="movementDateAdded" xml:space="preserve">
    <value>date of movement</value>
    <comment>Date of adding a movement</comment>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
    <comment>Text for name</comment>
  </data>
  <data name="numberDateMaskFormat" xml:space="preserve">
    <value>99/99/9999</value>
    <comment>Numberformat for MaskEditor</comment>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
    <comment>OK</comment>
  </data>
  <data name="Outgoing" xml:space="preserve">
    <value>Outgoing</value>
    <comment>Text for outgoings</comment>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview</value>
    <comment>Text for overview</comment>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
    <comment>Text for password</comment>
  </data>
  <data name="reason" xml:space="preserve">
    <value>reason</value>
    <comment>Text for reasons</comment>
  </data>
  <data name="reasonOptional" xml:space="preserve">
    <value>Reason (optional)</value>
    <comment>optional reason</comment>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
    <comment>Save-Text</comment>
  </data>
  <data name="sysAdmin" xml:space="preserve">
    <value>Sys-Admin</value>
    <comment>Text for system admins</comment>
  </data>
  <data name="thousandsSeparator" xml:space="preserve">
    <value>,</value>
    <comment>Separator for numbers after 3 digits</comment>
  </data>
  <data name="to" xml:space="preserve">
    <value>to</value>
    <comment>to</comment>
  </data>
  <data name="user" xml:space="preserve">
    <value>User</value>
    <comment>Text for user</comment>
  </data>
  <data name="userEdit" xml:space="preserve">
    <value>Edit user</value>
    <comment>Text for edit user</comment>
  </data>
  <data name="userNew" xml:space="preserve">
    <value>Add user</value>
    <comment>Text for new user</comment>
  </data>
  <data name="accountMovements" xml:space="preserve">
    <value>Account movements</value>
  </data>
  <data name="admin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="failure" xml:space="preserve">
    <value>Failure</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
    <comment>Home(Logout)</comment>
  </data>
  <data name="reporting" xml:space="preserve">
    <value>Reporting</value>
    <comment>Text for reporting</comment>
  </data>
  <data name="success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="createdFrom" xml:space="preserve">
    <value>Created from</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="movementDateCreated" xml:space="preserve">
    <value>Date of creation</value>
  </data>
  <data name="movementsDeletedFailure" xml:space="preserve">
    <value>Account movement is not deleted.</value>
  </data>
  <data name="movementsDeletedSuccess" xml:space="preserve">
    <value>Account movement is deleted.</value>
  </data>
  <data name="movementsNoSelection" xml:space="preserve">
    <value>No selected account movement found.</value>
  </data>
  <data name="periodOfTime" xml:space="preserve">
    <value>Period of Time</value>
  </data>
  <data name="reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="accounts" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="categoryPart" xml:space="preserve">
    <value>Category percentage</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>confirm</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="errorNameEmpty" xml:space="preserve">
    <value>Name must not be empty!</value>
  </data>
  <data name="errorPasswordsMatch" xml:space="preserve">
    <value>The passwords do not match</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="moneyDirectionType" xml:space="preserve">
    <value>Direction type</value>
  </data>
  <data name="passwordNew" xml:space="preserve">
    <value>Password new</value>
  </data>
  <data name="passwordOld" xml:space="preserve">
    <value>Password old</value>
  </data>
  <data name="reasons" xml:space="preserve">
    <value>Reasons</value>
  </data>
  <data name="serverError" xml:space="preserve">
    <value>Server error</value>
  </data>
  <data name="userDelete" xml:space="preserve">
    <value>Delete user</value>
  </data>
  <data name="userDeleteConfirm" xml:space="preserve">
    <value>Do you really want to delete the selected User?</value>
  </data>
  <data name="editRights" xml:space="preserve">
    <value>Edit rights</value>
  </data>
  <data name="userDeletedFailure" xml:space="preserve">
    <value>The user is not deleted.</value>
  </data>
  <data name="userDeletedSuccess" xml:space="preserve">
    <value>The user is deleted.</value>
  </data>
  <data name="usersNoSelection" xml:space="preserve">
    <value>No selected user found.</value>
  </data>
</root>